CREATE

<g:form method="post" enctype="multipart/form-data">
				<g:hiddenField name="id" value="${atorInstance?.id}" />
				<g:hiddenField name="version" value="${atorInstance?.version}" />
				<fieldset class="form">
					<g:render template="form"/>
				</fieldset>
				<fieldset class="buttons">
					<g:actionSubmit class="save" action="update" value="${message(code: 'default.button.update.label', default: 'Update')}" />
					<g:actionSubmit class="delete" action="delete" value="${message(code: 'default.button.delete.label', default: 'Delete')}" formnovalidate="" onclick="return confirm('${message(code: 'default.button.delete.confirm.message', default: 'Are you sure?')}');" />
				</fieldset>
			</g:form>

EDITE

<g:form method="post" enctype="multipart/form-data">

SHOW

<img src="${createLinkTo(dir:'ator/'+ atorInstance.id, file:''+atorInstance.foto)}"
                                                            alt="${atorInstance.foto}"
                                                            title="${atorInstance.foto}" 
                                                            width="120px" height="120px"/></span>

FORM

<input type = "file" name="imagem"/>

CONTROLLER

static allowedMethods = [save: "POST", update: "POST", delete: "DELETE"]


def save() {
        def atorInstance = new Ator(params)
        
        
        def imageFile = request.getFile('imagem')
        
        if(!imageFile.empty)
            atorInstance.foto = imageFile.originalFilename
        
        if (!atorInstance.save(flush: true)) {
            render(view: "create", model: [atorInstance: atorInstance])
            return
        }
        
        def webRootDir = servletContext.getRealPath("/")
        def imageDir = new File(webRootDir, "/ator/${atorInstance.id}")
        imageDir.mkdirs()
        
        if(!imageFile.empty){
            imageFile.transferTo( new File( imageDir, imageFile.originalFilename))
        }
        
        flash.message = message(code: 'default.created.message', args: [message(code: 'ator.label', default: 'Ator'), atorInstance.id])
        redirect(action: "show", id: atorInstance.id)
        
    }

def edit(long id) {
        def atorInstance = Ator.get(id)
        if (!atorInstance) {
            flash.message = message(code: 'default.not.found.message', args: [message(code: 'ator.label', default: 'Ator'), id])
            redirect(action: "list")
            return
        }

        [atorInstance: atorInstance]
    }

    @Transactional
    def update(Long id,Long version) {
      def atorInstance = Ator.get(id)
        if (!atorInstance) {
            flash.message = message(code: 'default.not.found.message', args: [message(code: 'ator.label', default: 'Ator'), id])
            redirect(action: "list")
            return
        }

        if (version != null) {
            if (atorInstance.version > version) {
                atorInstance.errors.rejectValue("version", "default.optimistic.locking.failure",
                    [message(code: 'ator.label', default: 'Ator')] as Object[],
                          "Another user has updated this Ator while you were editing")
                render(view: "edit", model: [atorInstance: atorInstance])
                return
            }
        }
        
        
        def imageFile = request.getFile('imagem')
        
        if(!imageFile.empty)
            atorInstance.foto = imageFile.originalFilename
        
        if (!atorInstance.save(flush: true)) {
            render(view: "create", model: [atorInstance: atorInstance])
            return
        }
        
        def webRootDir = servletContext.getRealPath("/")
        def imageDir = new File(webRootDir, "/ator/${atorInstance.id}")
        imageDir.mkdirs()
        
        if(!imageFile.empty){
            imageFile.transferTo( new File( imageDir, imageFile.originalFilename))
        }
        
        flash.message = message(code: 'default.created.message', args: [message(code: 'ator.label', default: 'Ator'), atorInstance.id])
        redirect(action: "show", id: atorInstance.id)
        
    }

index

<p><g:message code=" Total " /><g:message code="${atorInstanceCount}" /></p>

<g:sortableColumn property="foto" title="${message(code: 'ator.foto.label', default: 'Foto')}" />


<td> 
                                                    <img src="${createLinkTo(dir:'ator/'+ atorInstance.id, file:''+atorInstance.foto)}"
                                                            alt="${atorInstance.foto}"
                                                            title="${atorInstance.foto}" 
                                                            width="60px" height="60px"/>

                                                </td>			